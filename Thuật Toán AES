{"cells":[{"cell_type":"code","source":["from flask import Flask, request, send_file, render_template_string\n","from Crypto.Cipher import AES\n","from io import BytesIO\n","from pyngrok import conf, ngrok\n","\n","app = Flask(__name__)\n","\n","# G√°n m√£ ngrok token\n","conf.get_default().auth_token = \"2xQxIZHjfkrQTfRgzubeEAE7YPU_3szvQWGuhpJg6yeJtsbSA\"\n","\n","# Padding d·ªØ li·ªáu th√†nh b·ªôi s·ªë 16 (block AES)\n","def pad(data: bytes) -> bytes:\n","    pad_len = 16 - len(data) % 16\n","    return data + bytes([pad_len] * pad_len)\n","\n","# B·ªè padding sau khi gi·∫£i m√£\n","def unpad(data: bytes) -> bytes:\n","    pad_len = data[-1]\n","    return data[:-pad_len]\n","\n","# H√†m m√£ h√≥a file v·ªõi AES\n","def encrypt_file(data: bytes, key: str) -> bytes:\n","    if len(key) != 16:\n","        raise ValueError(\"Kh√≥a ph·∫£i c√≥ ƒë√∫ng 16 k√Ω t·ª±.\")\n","    cipher = AES.new(key.encode(), AES.MODE_ECB)\n","    encrypted = cipher.encrypt(pad(data))\n","    return encrypted\n","\n","# H√†m gi·∫£i m√£ file v·ªõi AES\n","def decrypt_aes(data: bytes, key: str) -> bytes:\n","    if len(key) != 16:\n","        raise ValueError(\"Kh√≥a ph·∫£i c√≥ ƒë√∫ng 16 k√Ω t·ª±.\")\n","    cipher = AES.new(key.encode(), AES.MODE_ECB)\n","    decrypted = cipher.decrypt(data)\n","    return unpad(decrypted)\n","\n","# HTML giao di·ªán web\n","HTML = '''\n","<!DOCTYPE html>\n","<html lang=\"en\">\n","<head>\n","    <meta charset=\"UTF-8\">\n","    <title>AES Encryption/Decryption</title>\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n","    <style>\n","        * {\n","            box-sizing: border-box;\n","            margin: 0;\n","            padding: 0;\n","        }\n","\n","        body {\n","            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n","            background: linear-gradient(to right, #6dd5ed, #2193b0);\n","            height: 100vh;\n","            display: flex;\n","            justify-content: center;\n","            align-items: center;\n","            padding: 20px;\n","        }\n","\n","        .container {\n","            background: white;\n","            border-radius: 16px;\n","            padding: 30px 40px;\n","            max-width: 420px;\n","            width: 100%;\n","            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n","        }\n","\n","        h1 {\n","            text-align: center;\n","            margin-bottom: 25px;\n","            color: #333;\n","            font-size: 24px;\n","        }\n","\n","        form {\n","            display: flex;\n","            flex-direction: column;\n","        }\n","\n","        input[type=\"file\"],\n","        input[type=\"text\"],\n","        select,\n","        input[type=\"submit\"] {\n","            margin-bottom: 15px;\n","            padding: 12px;\n","            font-size: 16px;\n","            border-radius: 8px;\n","            border: 1px solid #ccc;\n","        }\n","\n","        input[type=\"submit\"] {\n","            background: #28a745;\n","            color: white;\n","            font-weight: bold;\n","            border: none;\n","            transition: background 0.3s ease;\n","        }\n","\n","        input[type=\"submit\"]:hover {\n","            background: #218838;\n","        }\n","\n","        .error {\n","            color: red;\n","            font-weight: bold;\n","            text-align: center;\n","            margin-top: 10px;\n","        }\n","\n","        .success {\n","            color: green;\n","            font-weight: bold;\n","            text-align: center;\n","        }\n","\n","        @media (max-width: 500px) {\n","            .container {\n","                padding: 20px;\n","            }\n","        }\n","    </style>\n","</head>\n","<body>\n","    <div class=\"container\">\n","        <h1>AES Encrypt/Decrypt</h1>\n","        {% if error %}\n","            <p class=\"error\">{{ error }}</p>\n","        {% endif %}\n","        <form method=\"post\" enctype=\"multipart/form-data\" onsubmit=\"return validateForm()\">\n","            <input type=\"file\" name=\"file\" id=\"file\" required>\n","            <input type=\"text\" name=\"key\" id=\"key\" placeholder=\"key\" required>\n","            <select name=\"mode\">\n","                <option value=\"encrypt\">Encrypt</option>\n","                <option value=\"decrypt\">Decrypt</option>\n","            </select>\n","            <input type=\"submit\" value=\"Submit\">\n","        </form>\n","        <p id=\"form-error\" class=\"error\" style=\"display:none;\"></p>\n","    </div>\n","\n","    <script>\n","        function validateForm() {\n","            const key = document.getElementById(\"key\").value;\n","            const file = document.getElementById(\"file\").value;\n","            const errorElement = document.getElementById(\"form-error\");\n","\n","            if (!file) {\n","                errorElement.textContent = \"Please select a file.\";\n","                errorElement.style.display = \"block\";\n","                return false;\n","            }\n","\n","            if (key.length !== 16) {\n","                errorElement.textContent = \"Key must be exactly 16 characters.\";\n","                errorElement.style.display = \"block\";\n","                return false;\n","            }\n","\n","            errorElement.style.display = \"none\";\n","            return true;\n","        }\n","    </script>\n","</body>\n","</html>\n","'''\n","\n","\n","@app.route('/', methods=['GET', 'POST'])\n","def home():\n","    error = None\n","    if request.method == 'POST':\n","        f = request.files['file']\n","        key = request.form['key']\n","        mode = request.form['mode']\n","        data = f.read()\n","\n","        try:\n","            if mode == 'encrypt':\n","                result = encrypt_file(data, key)\n","                filename = f\"ma_hoa_{f.filename}\"\n","            else:\n","                result = decrypt_aes(data, key)\n","                filename = f\"giai_ma_{f.filename}\"\n","\n","            buffer = BytesIO(result)\n","            buffer.seek(0)\n","            return send_file(buffer, as_attachment=True, download_name=filename)\n","        except Exception as e:\n","            error = f\"L·ªói: {e}\"\n","\n","    return render_template_string(HTML, error=error)\n","\n","# Kh·ªüi t·∫°o ngrok\n","public_url = ngrok.connect(5000)\n","print(f\"üìå Truy c·∫≠p web t·∫°i: {public_url}\")\n","\n","# Ch·∫°y Flask\n","app.run(port=5000, use_reloader=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NcAvlUjH_O0q","outputId":"e8a4182b-d833-422e-8983-99d9cbfa9735"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["üìå Truy c·∫≠p web t·∫°i: NgrokTunnel: \"https://5259-34-74-128-6.ngrok-free.app\" -> \"http://localhost:5000\"\n"," * Serving Flask app '__main__'\n"," * Debug mode: off\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n"," * Running on http://127.0.0.1:5000\n","INFO:werkzeug:\u001b[33mPress CTRL+C to quit\u001b[0m\n","INFO:werkzeug:127.0.0.1 - - [22/May/2025 04:09:01] \"GET / HTTP/1.1\" 200 -\n","INFO:werkzeug:127.0.0.1 - - [22/May/2025 04:09:02] \"\u001b[33mGET /favicon.ico HTTP/1.1\u001b[0m\" 404 -\n"]}]},{"cell_type":"code","source":["!pip install flask pyngrok pycryptodome"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KIGHPe4k_7UX","executionInfo":{"status":"ok","timestamp":1747885259782,"user_tz":-420,"elapsed":11646,"user":{"displayName":"ƒê·∫±ng Phan","userId":"07963422223233171322"}},"outputId":"05215edf-b0c0-43a3-ff19-e23e154c6b59"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: flask in /usr/local/lib/python3.11/dist-packages (3.1.1)\n","Collecting pyngrok\n","  Downloading pyngrok-7.2.8-py3-none-any.whl.metadata (10 kB)\n","Collecting pycryptodome\n","  Downloading pycryptodome-3.23.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.4 kB)\n","Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.11/dist-packages (from flask) (1.9.0)\n","Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.11/dist-packages (from flask) (8.2.0)\n","Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from flask) (2.2.0)\n","Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.11/dist-packages (from flask) (3.1.6)\n","Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from flask) (3.0.2)\n","Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from flask) (3.1.3)\n","Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.11/dist-packages (from pyngrok) (6.0.2)\n","Downloading pyngrok-7.2.8-py3-none-any.whl (25 kB)\n","Downloading pycryptodome-3.23.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.3 MB)\n","\u001b[2K   \u001b[90m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m24.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pyngrok, pycryptodome\n","Successfully installed pycryptodome-3.23.0 pyngrok-7.2.8\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1747885136991}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}